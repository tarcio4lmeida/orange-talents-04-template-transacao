#MYSQL
spring.datasource.url=${BD_URL:jdbc:mysql://localhost:3306/transacao?createDatabaseIfNotExist=true&serverTimezone=UTC}
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.initialization-mode=always

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect


#KAFKA
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

spring.kafka.topic.transactions=${KAFKA_TOPIC_TRANSACTION:transacoes}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}